{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","chatId","creds","useState","value","setValue","handleSubmit","e","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUserName","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1e93ecc.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\n    if(message?.attachments?.length > 0) {\n        return (\n            <img\n                src={message.attachments[0].file}\n                alt='message-attachments'\n                className='message-image'\n                style={{ float: 'right' }}\n            />\n        )\n    }\n\n    return (\n        <div className='message' style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50'}}>\n            {message.text}\n        </div>\n    )\n}\n\nexport default MyMessage","const TheirMessage = ({lastMessage, message}) => {\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username\n    return (\n        <div className='message-row'>\n            {isFirstMessageByUser && (\n                <div\n                    className='message-avatar'\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\n                />\n            )}\n            {message?.attachments?.length > 0\n                ? (<img\n                    src={message.attachments[0].file}\n                    alt='message-attachments'\n                    className='message-image'\n                    style={{marginLeft: isFirstMessageByUser ? '4px' : '48px'}}/>)\n                : (<div className='message'\n                        style={{float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px'}}>\n                    {message.text}\n                   </div>)\n            }\n        </div>\n    )\n}\n\nexport default TheirMessage","import {useState} from 'react'\nimport {sendMessage, isTyping} from 'react-chat-engine'\nimport { SendOutlined, PictureOutlined} from '@ant-design/icons'\n\nconst MessageForm = (props) => {\n    const { chatId, creds} = props\n    const [value, setValue] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const text = value.trim()\n\n        if(text.length > 0) sendMessage(creds, chatId, { text })\n        setValue('')\n    }\n\n    const handlerChange = (e) => {\n        setValue(e.target.value)\n        isTyping(props, chatId)\n    }\n\n    const handleUpload = (e) => {\n        sendMessage(creds, chatId, { files: e.target.files, text: '' })\n    }\n\n    return (\n        <form className='message-form' onSubmit={handleSubmit}>\n            <input\n                className='message-input'\n                placeholder='Send a message...'\n                value={value}\n                onChange={handlerChange}\n                onSubmit={handleSubmit}\n            />\n            <label htmlFor='upload-button'>\n                <span className='image-button'>\n                    <PictureOutlined className='picture-icon'/>\n                </span>\n            </label>\n            <input\n                type='file'\n                multiple={false}\n                id='upload-button'\n                style={{ display: 'none' }}\n                onChange={handleUpload}\n            />\n            <button className='send-button' type='submit'>\n                <SendOutlined className='send-icon'/>\n            </button>\n        </form>\n    )\n}\n\nexport default MessageForm","import MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nimport MessageForm from \"./MessageForm\";\n\nconst ChatFeed = (props) => {\n    const {chats, activeChat, userName, messages} = props\n    const chat = chats && chats[activeChat]\n\n    const renderReadReceipts = (message, isMyMessage) => {\n        return chat.people.map((person, index) => person.last_read === message.id && (\n            <div\n                key={`read_${index}`}\n                className='read-receipt'\n                style={{\n                    float: isMyMessage ? 'right' : 'left',\n                    backgroundImage: `url(${person?.person?.avatar})`\n                }}\n            />\n        ))\n    }\n\n    const renderMessages = () => {\n        const keys = Object.keys(messages)\n\n        return keys.map((key, index) => {\n            const message = messages[key]\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\n            const isMyMessage = userName === message.sender.username\n\n            return(\n                <div key={`msg_${index}`} style={{width: '100%'}}>\n                    <div className='message-block'>\n                        {\n                            isMyMessage\n                            ? <MyMessage message={message}/>\n                            : <TheirMessage message={message} lastMessage={message[lastMessageKey]}/>\n                        }\n                    </div>\n                    <div className='read-receipts' style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\n                        { renderReadReceipts(message, isMyMessage) }\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    // renderMessages()\n\n    if (!chat) return 'Loading...'\n\n    return (\n        <div className='chat-feed'>\n            <div className='chat-title-container'>\n                <div className='chat-title'>{chat.title}</div>\n                <div className='chat-subtitle'>\n                    {chat.people.map((person) => ` ${person.person.username}`)}\n                </div>\n            </div>\n            { renderMessages() }\n            <div style={{height: '100px'}}/>\n            <div className='message-form-container'>\n                <MessageForm {...props} chatId={activeChat}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatFeed","import {useState} from 'react'\nimport axios from \"axios\";\n\nconst LoginForm = () => {\n    const [userName, setUserName] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState('')\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const authObject = {\n            'Project-ID': '90f42a53-f2ea-452d-b29d-1b9963b0cd6c',\n            'User-Name': userName,\n            'User-Secret': password,\n        }\n        \n        try {\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject})\n            localStorage.setItem('userName', userName)\n            localStorage.setItem('password', password)\n            window.location.reload()\n        } catch (error) {\n            setError('Oops, incorrect credentials!')\n        }\n    }\n\n    return (\n        <div className='wrapper'>\n            <div className='form'>\n                <h1 className='title'>Chat Application</h1>\n                <form onSubmit={handleSubmit}>\n                    <input\n                        value={userName}\n                        type='text'\n                        onChange={(e) => setUserName(e.target.value)}\n                        className='input'\n                        placeholder='Username'\n                        required\n                    />\n                    <input\n                        value={password}\n                        type='password'\n                        onChange={(e) => setPassword(e.target.value)}\n                        className='input'\n                        placeholder='Password'\n                        required\n                    />\n                    <div align='center'>\n                        <button type='submit' className='button'>\n                            <span>Start Chatting</span>\n                        </button>\n                    </div>\n                    <h2 className='error'>{error}</h2>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm","import {ChatEngine} from 'react-chat-engine'\nimport ChatFeed from './components/ChatFeed'\nimport './App.css'\nimport LoginForm from \"./components/LoginForm\";\n\nconst App = () => {\n\n    if(!localStorage.getItem('userName')) return <LoginForm/>\n\n  return (\n      <ChatEngine\n          height='100vh'\n          projectID='90f42a53-f2ea-452d-b29d-1b9963b0cd6c'\n          userName={localStorage.getItem('userName')}\n          userSecret={localStorage.getItem('password')}\n          renderChatFeed={ (chatAppProps) => <ChatFeed {...chatAppProps}/> }\n      />\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}